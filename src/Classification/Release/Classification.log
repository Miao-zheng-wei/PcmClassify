生成启动时间为 2023/12/8 19:38:02。
     1>项目“E:\c++_code\正能项目\Classification\Classification\Classification.vcxproj”在节点 2 上(Rebuild 个目标)。
     1>ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\CL.exe /c /Zi /nologo /W3 /WX- /O2 /Oi /Oy- /GL /D WIN32 /D NDEBUG /D _WINDOWS /D _USRDLL /D CLASSIFICATION_EXPORTS /D _CRT_SECURE_NO_WARNINGS /D PC_BUILDING_EXPORTS /D _WINDLL /D _UNICODE /D UNICODE /Gm- /EHsc /MD /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Fo"Release\\" /Fd"Release\vc120.pdb" /Gd /TP /analyze- /errorReport:prompt ClassificationAPI.cpp NormalizedProgress.cpp
         ClassificationAPI.cpp
     1>e:\c++_code\正能项目\classification\classification\ClassificationAPI.h(135): warning C4305: “初始化”: 从“double”到“float”截断
     1>e:\c++_code\正能项目\classification\classification\ClassificationAPI.h(195): warning C4305: “初始化”: 从“double”到“float”截断
     1>e:\c++_code\正能项目\classification\classification\python310\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14): warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION
     1>e:\c++_code\正能项目\classification\classification\Classification.h(37): warning C4996: 'PyUnicode_FromUnicode': deprecated in 3.3
                 e:\c++_code\正能项目\classification\classification\python310\include\cpython/unicodeobject.h(551) : 参见“PyUnicode_FromUnicode”的声明
     1>ClassificationAPI.cpp(6): warning C4273: “calTrainFeatures”: dll 链接不一致
                 e:\c++_code\正能项目\classification\classification\ClassificationAPI.h(254) : 参见“calTrainFeatures”的前一个定义
     1>ClassificationAPI.cpp(22): warning C4273: “trainAPI”: dll 链接不一致
                 e:\c++_code\正能项目\classification\classification\ClassificationAPI.h(251) : 参见“trainAPI”的前一个定义
     1>ClassificationAPI.cpp(30): warning C4273: “testAPI”: dll 链接不一致
                 e:\c++_code\正能项目\classification\classification\ClassificationAPI.h(252) : 参见“testAPI”的前一个定义
     1>ClassificationAPI.cpp(38): warning C4273: “testFeaAPI”: dll 链接不一致
                 e:\c++_code\正能项目\classification\classification\ClassificationAPI.h(253) : 参见“testFeaAPI”的前一个定义
     1>ClassificationAPI.cpp(47): warning C4273: “loadModelAPI”: dll 链接不一致
                 e:\c++_code\正能项目\classification\classification\ClassificationAPI.h(255) : 参见“loadModelAPI”的前一个定义
     1>ClassificationAPI.cpp(57): warning C4273: “classifyPointCloudAPI”: dll 链接不一致
                 e:\c++_code\正能项目\classification\classification\ClassificationAPI.h(257) : 参见“classifyPointCloudAPI”的前一个定义
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(25): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
                 e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(20): 编译类 模板 成员函数“sc::FeatureCalculatorDH<PointT>::FeatureCalculatorDH(float,float)”时
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\packed\scFeatureCombinerCDHVFast.h(64): 参见对正在编译的函数 模板 实例化“sc::FeatureCalculatorDH<PointT>::FeatureCalculatorDH(float,float)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\packed\scFeatureCombinerCDHVFast.h(64): 参见对正在编译的类 模板 实例化“sc::FeatureCalculatorDH<PointT>”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\packed\scFeatureCombinerCDHVFast.h(62): 编译类 模板 成员函数“sc::FeatureCombinerCDHVFast<PointT>::FeatureCombinerCDHVFast(void)”时
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\Classification.h(171): 参见对正在编译的函数 模板 实例化“sc::FeatureCombinerCDHVFast<PointT>::FeatureCombinerCDHVFast(void)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\Classification.h(171): 参见对正在编译的类 模板 实例化“sc::FeatureCombinerCDHVFast<PointT>”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\Classification.h(169): 编译类 模板 成员函数“bool Classification<pcc::LASPoint>::getFeature(sc::FeatureMatrix &,std::vector<pcc::LASPoint,std::allocator<_Ty>> *,GenericProgressCallback *)”时
                 with
                 [
                     _Ty=pcc::LASPoint
                 ]
                 ClassificationAPI.cpp(9): 参见对正在编译的函数 模板 实例化“bool Classification<pcc::LASPoint>::getFeature(sc::FeatureMatrix &,std::vector<pcc::LASPoint,std::allocator<_Ty>> *,GenericProgressCallback *)”的引用
                 with
                 [
                     _Ty=pcc::LASPoint
                 ]
                 ClassificationAPI.cpp(7): 参见对正在编译的类 模板 实例化“Classification<pcc::LASPoint>”的引用
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(245): warning C4244: “=”: 从“int”转换到“float”，可能丢失数据
                 e:\c++_code\正能项目\classification\classification\VoxelGrid.h(226): 编译类 模板 成员函数“void VoxelGrid<PointT>::VoxelGrid_ApplyFilter(std::vector<pcc::LASPoint,std::allocator<_Ty>> &,std::vector<cloud_point_index_idx,std::allocator<cloud_point_index_idx>> &,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int>>> &,GenericProgressCallback *)”时
                 with
                 [
                     PointT=pcc::LASPoint
         ,            _Ty=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\Classification.h(797): 参见对正在编译的函数 模板 实例化“void VoxelGrid<PointT>::VoxelGrid_ApplyFilter(std::vector<pcc::LASPoint,std::allocator<_Ty>> &,std::vector<cloud_point_index_idx,std::allocator<cloud_point_index_idx>> &,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int>>> &,GenericProgressCallback *)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
         ,            _Ty=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\Classification.h(793): 参见对正在编译的类 模板 实例化“VoxelGrid<PointT>”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\Classification.h(792): 编译类 模板 成员函数“void Classification<pcc::LASPoint>::getVoxelPoints(float,std::vector<pcc::LASPoint,std::allocator<_Ty>> *,std::vector<_Ty,std::allocator<_Ty>> &,std::vector<cloud_point_index_idx,std::allocator<cloud_point_index_idx>> &,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int>>> &,GenericProgressCallback *)”时
                 with
                 [
                     _Ty=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\Classification.h(213): 参见对正在编译的函数 模板 实例化“void Classification<pcc::LASPoint>::getVoxelPoints(float,std::vector<pcc::LASPoint,std::allocator<_Ty>> *,std::vector<_Ty,std::allocator<_Ty>> &,std::vector<cloud_point_index_idx,std::allocator<cloud_point_index_idx>> &,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int>>> &,GenericProgressCallback *)”的引用
                 with
                 [
                     _Ty=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\Classification.h(115): 编译类 模板 成员函数“Classification<pcc::LASPoint>::Classification(void)”时
                 ClassificationAPI.cpp(7): 参见对正在编译的函数 模板 实例化“Classification<pcc::LASPoint>::Classification(void)”的引用
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(246): warning C4244: “=”: 从“int”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(247): warning C4244: “=”: 从“int”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(248): warning C4244: “=”: 从“int”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(249): warning C4244: “=”: 从“int”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(250): warning C4244: “=”: 从“int”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(269): warning C4018: “<”: 有符号/无符号不匹配
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(276): warning C4244: “初始化”: 从“float”转换到“int”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(132): warning C4018: “<”: 有符号/无符号不匹配
                 E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(112): 编译类 模板 成员函数“bool FlannKDTree<PointT>::BuildKDTree(std::vector<pcc::LASPoint,std::allocator<_Ty>> &)”时
                 with
                 [
                     PointT=pcc::LASPoint
         ,            _Ty=pcc::LASPoint
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\packed\scFeatureCombinerCDHVFast.h(136): 参见对正在编译的函数 模板 实例化“bool FlannKDTree<PointT>::BuildKDTree(std::vector<pcc::LASPoint,std::allocator<_Ty>> &)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
         ,            _Ty=pcc::LASPoint
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\packed\scFeatureCombinerCDHVFast.h(68): 参见对正在编译的类 模板 实例化“FlannKDTree<PointT>”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(134): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(135): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(136): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(141): warning C4018: “<”: 有符号/无符号不匹配
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(144): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(146): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(148): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(49): warning C4018: “<”: 有符号/无符号不匹配
                 e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(45): 编译类 模板 成员函数“bool sc::FeatureCalculatorCovFast<PointT>::calculateFeaturesImpl(sc::FeatureMatrix &,GenericProgressCallback *)”时
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorBase.h(104): 参见对正在编译的函数 模板 实例化“bool sc::FeatureCalculatorCovFast<PointT>::calculateFeaturesImpl(sc::FeatureMatrix &,GenericProgressCallback *)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\packed\scFeatureCombinerCDHVFast.h(63): 参见对正在编译的类 模板 实例化“sc::FeatureCalculatorCovFast<PointT>”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(47): warning C4018: “<”: 有符号/无符号不匹配
                 e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(45): 编译类 模板 成员函数“bool sc::FeatureCalculatorDH<PointT>::calculateFeaturesImpl(sc::FeatureMatrix &,GenericProgressCallback *)”时
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorBase.h(104): 参见对正在编译的函数 模板 实例化“bool sc::FeatureCalculatorDH<PointT>::calculateFeaturesImpl(sc::FeatureMatrix &,GenericProgressCallback *)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
     1>e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(77): warning C4018: “<”: 有符号/无符号不匹配
                 e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(65): 编译类 模板 成员函数“bool sc::FeatureCalculatorCovFast<PointT>::calculateFeaturesImpl(int,sc::FeatureVector &)”时
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(58): 参见对正在编译的函数 模板 实例化“bool sc::FeatureCalculatorCovFast<PointT>::calculateFeaturesImpl(int,sc::FeatureVector &)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
     1>e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(79): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(80): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(81): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(93): warning C4018: “<”: 有符号/无符号不匹配
     1>e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(95): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(96): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(97): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(198): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(90): warning C4244: “=”: 从“unsigned int”转换到“float”，可能丢失数据
                 e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(70): 编译类 模板 成员函数“bool sc::FeatureCalculatorDH<PointT>::calculateFeaturesImpl(int,sc::FeatureVector &)”时
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(64): 参见对正在编译的函数 模板 实例化“bool sc::FeatureCalculatorDH<PointT>::calculateFeaturesImpl(int,sc::FeatureVector &)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(96): warning C4018: “<”: 有符号/无符号不匹配
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(98): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(123): warning C4244: “=”: 从“unsigned int”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(124): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(129): warning C4018: “<”: 有符号/无符号不匹配
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(131): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(145): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(146): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(87): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
                 e:\c++_code\正能项目\classification\classification\VoxelGrid.h(79): 编译类 模板 成员函数“void VoxelGrid<PointT>::GetMaxMin(Array4f &,Array4f &)”时
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\VoxelGrid.h(235): 参见对正在编译的函数 模板 实例化“void VoxelGrid<PointT>::GetMaxMin(Array4f &,Array4f &)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\VoxelGrid.h(49): 编译类 模板 成员函数“VoxelGrid<PointT>::VoxelGrid(void)”时
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 e:\c++_code\正能项目\classification\classification\Classification.h(793): 参见对正在编译的函数 模板 实例化“VoxelGrid<PointT>::VoxelGrid(void)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(88): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(89): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(96): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(97): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\VoxelGrid.h(98): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(208): warning C4244: “=”: 从“const double”转换到“float”，可能丢失数据
                 E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(203): 编译类 模板 成员函数“int FlannKDTree<PointT>::radiusSearch(const PointT &,double,std::vector<int,std::allocator<_Ty>> &,std::vector<sc::FeatElemType,std::allocator<float>> &,unsigned int) const”时
                 with
                 [
                     PointT=pcc::LASPoint
         ,            _Ty=int
                 ]
                 e:\c++_code\正能项目\classification\classification\FeatureCalculatorDH.h(88): 参见对正在编译的函数 模板 实例化“int FlannKDTree<PointT>::radiusSearch(const PointT &,double,std::vector<int,std::allocator<_Ty>> &,std::vector<sc::FeatElemType,std::allocator<float>> &,unsigned int) const”的引用
                 with
                 [
                     PointT=pcc::LASPoint
         ,            _Ty=int
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(80): 编译类 模板 成员函数“FlannKDTree<PointT>::FlannKDTree(void)”时
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\packed\scFeatureCombinerCDHVFast.h(68): 参见对正在编译的函数 模板 实例化“FlannKDTree<PointT>::FlannKDTree(void)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(210): warning C4244: “=”: 从“const double”转换到“float”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(212): warning C4244: “=”: 从“const double”转换到“float”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(169): warning C4018: “>”: 有符号/无符号不匹配
                 E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(166): 编译类 模板 成员函数“int FlannKDTree<PointT>::nearestKSearch(const PointT &,int,std::vector<int,std::allocator<_Ty>> &,std::vector<sc::FeatElemType,std::allocator<float>> &) const”时
                 with
                 [
                     PointT=pcc::LASPoint
         ,            _Ty=int
                 ]
                 e:\c++_code\正能项目\classification\classification\include\packed\scFeatureCalculatorCovFast.h(75): 参见对正在编译的函数 模板 实例化“int FlannKDTree<PointT>::nearestKSearch(const PointT &,int,std::vector<int,std::allocator<_Ty>> &,std::vector<sc::FeatElemType,std::allocator<float>> &) const”的引用
                 with
                 [
                     PointT=pcc::LASPoint
         ,            _Ty=int
                 ]
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(179): warning C4244: “=”: 从“const double”转换到“float”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(181): warning C4244: “=”: 从“const double”转换到“float”，可能丢失数据
     1>E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(183): warning C4244: “=”: 从“const double”转换到“float”，可能丢失数据
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(342): warning C4291: “void *operator new(size_t,flann::PooledAllocator &)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(332): 编译类 模板 成员函数“void flann::KMeansIndex<flann::DummyDistance>::buildIndexImpl(void)”时
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/all_indices.h(89): 参见对正在编译的类 模板 实例化“flann::KMeansIndex<flann::DummyDistance>”的引用
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/all_indices.h(119): 参见对正在编译的类 模板 实例化“flann::needs_kdtree_distance<flann::KMeansIndex<flann::DummyDistance>>”的引用
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/all_indices.h(171): 参见对正在编译的类 模板 实例化“flann::valid_combination<flann::KMeansIndex,Distance,ElementType>”的引用
                 with
                 [
                     Distance=flann::L2_Simple<float>
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\flann/flann.hpp(113): 参见对正在编译的函数 模板 实例化“flann::NNIndex<Distance> *flann::create_index_by_type<Distance>(const flann::flann_algorithm_t,const flann::Matrix<float> &,const flann::IndexParams &,const Distance &)”的引用
                 with
                 [
                     Distance=flann::L2_Simple<float>
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\flann/flann.hpp(101): 编译类 模板 成员函数“flann::Index<flann::L2_Simple<float>>::Index(const flann::Matrix<float> &,const flann::IndexParams &,Distance)”时
                 with
                 [
                     Distance=flann::L2_Simple<float>
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(155): 参见对正在编译的函数 模板 实例化“flann::Index<flann::L2_Simple<float>>::Index(const flann::Matrix<float> &,const flann::IndexParams &,Distance)”的引用
                 with
                 [
                     Distance=flann::L2_Simple<float>
                 ]
                 E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(105): 参见对正在编译的类 模板 实例化“flann::Index<flann::L2_Simple<float>>”的引用
                 E:\c++_code\正能项目\Classification\Classification\include\FlannKDTree.h(97): 编译类 模板 成员函数“FlannKDTree<PointT>::~FlannKDTree(void)”时
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
                 C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xmemory0(611): 参见对正在编译的函数 模板 实例化“FlannKDTree<PointT>::~FlannKDTree(void)”的引用
                 with
                 [
                     PointT=pcc::LASPoint
                 ]
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(308): warning C4291: “void *operator new(size_t,flann::PooledAllocator &)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(298): 编译类 模板 成员函数“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::buildIndexImpl(void)”时
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/all_indices.h(89): 参见对正在编译的类 模板 实例化“flann::HierarchicalClusteringIndex<flann::DummyDistance>”的引用
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/all_indices.h(119): 参见对正在编译的类 模板 实例化“flann::needs_kdtree_distance<flann::HierarchicalClusteringIndex<flann::DummyDistance>>”的引用
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/all_indices.h(180): 参见对正在编译的类 模板 实例化“flann::valid_combination<flann::HierarchicalClusteringIndex,Distance,ElementType>”的引用
                 with
                 [
                     Distance=flann::L2_Simple<float>
                 ]
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(702): warning C4291: “void *operator new(size_t,flann::PooledAllocator &)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(543): 编译类 模板 成员函数“void flann::KMeansIndex<flann::DummyDistance>::computeClustering(flann::KMeansIndex<flann::DummyDistance>::Node *,int *,int,int)”时
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(344): 参见对正在编译的函数 模板 实例化“void flann::KMeansIndex<flann::DummyDistance>::computeClustering(flann::KMeansIndex<flann::DummyDistance>::Node *,int *,int,int)”的引用
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(516): warning C4291: “void *operator new(size_t,flann::PooledAllocator &)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(472): 编译类 模板 成员函数“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::computeClustering(flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node *,int *,int)”时
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(309): 参见对正在编译的函数 模板 实例化“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::computeClustering(flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node *,int *,int)”的引用
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(469): warning C4291: “void *operator new(size_t,flann::PooledAllocator &)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(468): 编译类 模板 成员函数“void flann::KMeansIndex<flann::DummyDistance>::copyTree(flann::KMeansIndex<flann::DummyDistance>::Node *&,flann::KMeansIndex<flann::DummyDistance>::Node *const &)”时
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(157): 参见对正在编译的函数 模板 实例化“void flann::KMeansIndex<flann::DummyDistance>::copyTree(flann::KMeansIndex<flann::DummyDistance>::Node *&,flann::KMeansIndex<flann::DummyDistance>::Node *const &)”的引用
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(426): warning C4291: “void *operator new(size_t,flann::PooledAllocator &)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(425): 编译类 模板 成员函数“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::copyTree(flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node *&,flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node *const &)”时
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(146): 参见对正在编译的函数 模板 实例化“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::copyTree(flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node *&,flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node *const &)”的引用
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/dist.h(87): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(586): 参见对正在编译的函数 模板 实例化“float flann::L2_Simple<float>::operator ()<float*,T*>(Iterator1,Iterator2,size_t,float) const”的引用
                 with
                 [
                     T=double
         ,            Iterator1=float *
         ,            Iterator2=double *
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(586): 参见对正在编译的函数 模板 实例化“float flann::L2_Simple<float>::operator ()<float*,T*>(Iterator1,Iterator2,size_t,float) const”的引用
                 with
                 [
                     T=double
         ,            Iterator1=float *
         ,            Iterator2=double *
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(543): 编译类 模板 成员函数“void flann::KMeansIndex<Distance>::computeClustering(flann::KMeansIndex<Distance>::Node *,int *,int,int)”时
                 with
                 [
                     Distance=flann::L2_Simple<float>
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(344): 参见对正在编译的函数 模板 实例化“void flann::KMeansIndex<Distance>::computeClustering(flann::KMeansIndex<Distance>::Node *,int *,int,int)”的引用
                 with
                 [
                     Distance=flann::L2_Simple<float>
                 ]
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(249): warning C4291: “void *operator new(size_t,flann::PooledAllocator &)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::KMeansIndex<flann::DummyDistance>::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::KMeansIndex<flann::DummyDistance>::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(26): 参见对正在编译的函数 模板 实例化“void flann::serialization::access::serialize<Archive,T>(Archive &,T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::KMeansIndex<flann::DummyDistance>
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(40): 参见对正在编译的函数 模板 实例化“void flann::serialization::serialize<OutputArchive,T>(Archive &,T &)”的引用
                 with
                 [
                     OutputArchive=flann::serialization::SaveArchive
         ,            T=flann::KMeansIndex<flann::DummyDistance>
         ,            Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(296): 参见对正在编译的函数 模板 实例化“void flann::serialization::Serializer<T>::save<Archive>(OutputArchive &,const T &)”的引用
                 with
                 [
                     T=flann::KMeansIndex<flann::DummyDistance>
         ,            Archive=flann::serialization::SaveArchive
         ,            OutputArchive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(296): 参见对正在编译的函数 模板 实例化“void flann::serialization::Serializer<T>::save<Archive>(OutputArchive &,const T &)”的引用
                 with
                 [
                     T=flann::KMeansIndex<flann::DummyDistance>
         ,            Archive=flann::serialization::SaveArchive
         ,            OutputArchive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(265): 参见对正在编译的函数 模板 实例化“Archive &flann::serialization::OutputArchive<Archive>::operator &<flann::KMeansIndex<flann::DummyDistance>>(const T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::KMeansIndex<flann::DummyDistance>
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(265): 参见对正在编译的函数 模板 实例化“Archive &flann::serialization::OutputArchive<Archive>::operator &<flann::KMeansIndex<flann::DummyDistance>>(const T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::KMeansIndex<flann::DummyDistance>
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(263): 编译类 模板 成员函数“void flann::KMeansIndex<flann::DummyDistance>::saveIndex(FILE *)”时
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(244): warning C4291: “void *operator new(size_t,flann::PooledAllocator &)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(26): 参见对正在编译的函数 模板 实例化“void flann::serialization::access::serialize<Archive,T>(Archive &,T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::HierarchicalClusteringIndex<flann::DummyDistance>
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(40): 参见对正在编译的函数 模板 实例化“void flann::serialization::serialize<OutputArchive,T>(Archive &,T &)”的引用
                 with
                 [
                     OutputArchive=flann::serialization::SaveArchive
         ,            T=flann::HierarchicalClusteringIndex<flann::DummyDistance>
         ,            Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(296): 参见对正在编译的函数 模板 实例化“void flann::serialization::Serializer<T>::save<Archive>(OutputArchive &,const T &)”的引用
                 with
                 [
                     T=flann::HierarchicalClusteringIndex<flann::DummyDistance>
         ,            Archive=flann::serialization::SaveArchive
         ,            OutputArchive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(296): 参见对正在编译的函数 模板 实例化“void flann::serialization::Serializer<T>::save<Archive>(OutputArchive &,const T &)”的引用
                 with
                 [
                     T=flann::HierarchicalClusteringIndex<flann::DummyDistance>
         ,            Archive=flann::serialization::SaveArchive
         ,            OutputArchive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(261): 参见对正在编译的函数 模板 实例化“Archive &flann::serialization::OutputArchive<Archive>::operator &<flann::HierarchicalClusteringIndex<flann::DummyDistance>>(const T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::HierarchicalClusteringIndex<flann::DummyDistance>
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(261): 参见对正在编译的函数 模板 实例化“Archive &flann::serialization::OutputArchive<Archive>::operator &<flann::HierarchicalClusteringIndex<flann::DummyDistance>>(const T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::HierarchicalClusteringIndex<flann::DummyDistance>
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(259): 编译类 模板 成员函数“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::saveIndex(FILE *)”时
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(441): warning C4291: “void *operator new(size_t,flann::PooledAllocator &)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::KMeansIndex<flann::DummyDistance>::Node::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::KMeansIndex<flann::DummyDistance>::Node::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(26): 参见对正在编译的函数 模板 实例化“void flann::serialization::access::serialize<Archive,T>(Archive &,T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::KMeansIndex<flann::DummyDistance>::Node
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(40): 参见对正在编译的函数 模板 实例化“void flann::serialization::serialize<OutputArchive,T>(Archive &,T &)”的引用
                 with
                 [
                     OutputArchive=flann::serialization::SaveArchive
         ,            T=flann::KMeansIndex<flann::DummyDistance>::Node
         ,            Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(296): 参见对正在编译的函数 模板 实例化“void flann::serialization::Serializer<T>::save<Archive>(OutputArchive &,const T &)”的引用
                 with
                 [
                     T=flann::KMeansIndex<flann::DummyDistance>::Node
         ,            Archive=flann::serialization::SaveArchive
         ,            OutputArchive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(296): 参见对正在编译的函数 模板 实例化“void flann::serialization::Serializer<T>::save<Archive>(OutputArchive &,const T &)”的引用
                 with
                 [
                     T=flann::KMeansIndex<flann::DummyDistance>::Node
         ,            Archive=flann::serialization::SaveArchive
         ,            OutputArchive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(251): 参见对正在编译的函数 模板 实例化“Archive &flann::serialization::OutputArchive<Archive>::operator &<flann::KMeansIndex<flann::DummyDistance>::Node>(const T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::KMeansIndex<flann::DummyDistance>::Node
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/kmeans_index.h(251): 参见对正在编译的函数 模板 实例化“Archive &flann::serialization::OutputArchive<Archive>::operator &<flann::KMeansIndex<flann::DummyDistance>::Node>(const T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::KMeansIndex<flann::DummyDistance>::Node
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::KMeansIndex<flann::DummyDistance>::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::KMeansIndex<flann::DummyDistance>::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
     1>e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(394): warning C4291: “void *operator new(size_t,flann::PooledAllocator &)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(26): 参见对正在编译的函数 模板 实例化“void flann::serialization::access::serialize<Archive,T>(Archive &,T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(40): 参见对正在编译的函数 模板 实例化“void flann::serialization::serialize<OutputArchive,T>(Archive &,T &)”的引用
                 with
                 [
                     OutputArchive=flann::serialization::SaveArchive
         ,            T=flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node
         ,            Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(296): 参见对正在编译的函数 模板 实例化“void flann::serialization::Serializer<T>::save<Archive>(OutputArchive &,const T &)”的引用
                 with
                 [
                     T=flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node
         ,            Archive=flann::serialization::SaveArchive
         ,            OutputArchive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(296): 参见对正在编译的函数 模板 实例化“void flann::serialization::Serializer<T>::save<Archive>(OutputArchive &,const T &)”的引用
                 with
                 [
                     T=flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node
         ,            Archive=flann::serialization::SaveArchive
         ,            OutputArchive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(246): 参见对正在编译的函数 模板 实例化“Archive &flann::serialization::OutputArchive<Archive>::operator &<flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node>(const T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/algorithms/hierarchical_clustering_index.h(246): 参见对正在编译的函数 模板 实例化“Archive &flann::serialization::OutputArchive<Archive>::operator &<flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node>(const T &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
         ,            T=flann::HierarchicalClusteringIndex<flann::DummyDistance>::Node
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/serialization.h(18): 参见对正在编译的函数 模板 实例化“void flann::HierarchicalClusteringIndex<flann::DummyDistance>::serialize<Archive>(Archive &)”的引用
                 with
                 [
                     Archive=flann::serialization::SaveArchive
                 ]
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
                 e:\c++_code\正能项目\classification\classification\include\flann/util/allocator.h(197) : 参见“operator new”的声明
         NormalizedProgress.cpp
       Link:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\link.exe /ERRORREPORT:PROMPT /OUT:"E:\c++_code\正能项目\Classification\Release\Classification.dll" /INCREMENTAL:NO /NOLOGO python310.lib flann.lib LASlib.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"E:\c++_code\正能项目\Classification\Release\Classification.pdb" /SUBSYSTEM:WINDOWS /OPT:REF /OPT:ICF /LTCG /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"E:\c++_code\正能项目\Classification\Release\Classification.lib" /MACHINE:X64 /SAFESEH /DLL Release\ClassificationAPI.obj
         Release\NormalizedProgress.obj
     1>Release\ClassificationAPI.obj : fatal error LNK1112: 模块计算机类型“X86”与目标计算机类型“x64”冲突
     1>已完成生成项目“E:\c++_code\正能项目\Classification\Classification\Classification.vcxproj”(Rebuild 个目标)的操作 - 失败。

生成失败。

已用时间 00:00:01.77
